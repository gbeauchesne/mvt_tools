#!/bin/bash
#
# Copyright (C) 2014 Intel Corporation
#   Author: Gwenole Beauchesne <gwenole.beauchesne@intel.com>
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public License
# as published by the Free Software Foundation; either version 2.1
# of the License, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the Free
# Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
# Boston, MA 02110-1301 

shopt -s extglob
prog="$0"
progname="${prog##*/}"

CURL_TOOL=$(which ${CURL:-curl})
WGET_TOOL=$(which ${WGET:-wget})
MD5SUM_TOOL=$(which ${MD5SUM:-md5sum})

# Use plain C locale
export LC_ALL=C

# Message logging utilities
function log_message() {
    local out="$1" category="$2"
    shift 2
    echo $category: ${1+"$@"} >>$out
}

function warning()      { log_message /dev/stdout warning ${1+"$@"}; }
function error()        { log_message /dev/stderr error ${1+"$@"}; }
function fatal_error()  { error ${1+"$@"}; exit 1; }

# Determines the absolute path of the supplied directory
function get_abs_path() {
    local f="$1"

    [[ -f "$f" ]] && \
        { echo $(cd $(dirname $f) && pwd)/${f##*/}; return 0; }
    [[ -d "$f" ]] && \
        { echo $(cd $f && pwd); return 0; }
    echo $f
}

# Download with curl
function fetch_source_curl() {
    local url="$1" o_name="$2"

    echo "Fetching $url"
    $CURL_TOOL -# "$url" -o "$o_name"
}

# Download with wget
function fetch_source_wget() {
    local url="$1" o_name="$2"

    echo "Fetching $url"
    $WGET_TOOL "$url" -O "$o_name"
}

# Select which download tool to use
function fetch_source_any() {
    [[ -x "$WGET_TOOL" ]] && FETCH_SOURCE="fetch_source_wget"
    [[ -x "$CURL_TOOL" ]] && FETCH_SOURCE="fetch_source_curl"

    $FETCH_SOURCE ${1+"$@"}
}

# Fetch the selected sources
function fetch_sources() {
    local m_name="$1"
    local o_name name url hash o_hash _

    while IFS=";" read name url hash; do
        case "$name" in
            ("#"*|"")   continue;;
            ("$m_name") ;;
            (*)         [[ -n "$m_name" ]] && continue;;
        esac
        o_name="${FILES_ROOT}/${name,,}_sources.${url##*.}"

        if [[ -r "$o_name" ]]; then
            read o_hash _ < <($MD5SUM_TOOL "$o_name")
            [[ "$o_hash" = "$hash" ]] && continue
            rm -f "$o_name"
        fi

        $FETCH_SOURCE "$url" "$o_name" || \
            fatal_error "failed to download $url ($name)"

        read o_hash _ < <($MD5SUM_TOOL "$o_name")
        [[ "$o_hash" = "$hash" ]] || \
            fatal_error "failed to validate download ($name)"
    done << EOF
# H.264 AVC Reference Software (JM)
REF_H264_AVC;\
http://iphome.hhi.de/suehring/tml/download/jm18.6.zip;\
3bb3ce66316fd9e8ec3d26d88319a6ba
EOF
}

[[ -x "$MD5SUM_TOOL" ]] || \
    fatal_error "failed to locate \`md5sum' tool"
[[ -x "$CURL_TOOL" ]] || [[ -x "$WGET_TOOL" ]] || \
    fatal_error "failed to locate \`wget' or \`curl' tool"

FILES_ROOT=$(get_abs_path $(dirname $prog))
mkdir -p $FILES_ROOT/

FETCH_SOURCE="fetch_source_any"
fetch_sources "$1"
